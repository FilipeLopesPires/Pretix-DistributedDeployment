version: '3'
services:
  pg-0:
    image: bitnami/postgresql-repmgr:11
    expose:
      - 5432
    volumes:
      - pg_0_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
      - POSTGRESQL_USERNAME=customuser
      - POSTGRESQL_PASSWORD=custompassword
      - POSTGRESQL_DATABASE=customdatabase
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1,pg-2
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
  pg-1:
    image: bitnami/postgresql-repmgr:11
    expose:
      - 5432
    volumes:
      - pg_1_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
      - POSTGRESQL_USERNAME=customuser
      - POSTGRESQL_PASSWORD=custompassword
      - POSTGRESQL_DATABASE=customdatabase
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1,pg-2
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1

  pg-2:
    image: bitnami/postgresql-repmgr:11
    expose:
      - 5432
    volumes:
      - pg_2_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
      - POSTGRESQL_USERNAME=customuser
      - POSTGRESQL_PASSWORD=custompassword
      - POSTGRESQL_DATABASE=customdatabase
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1,pg-2
      - REPMGR_NODE_NAME=pg-2
      - REPMGR_NODE_NETWORK_NAME=pg-2

  pgpool:
    image: bitnami/pgpool:4
    ports:
      - 7232:5432
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-0:5432,1:pg-1:5432,2:pg-2:5432
      - PGPOOL_SR_CHECK_USER=customuser
      - PGPOOL_SR_CHECK_PASSWORD=custompassword
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=adminpassword
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpassword
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
    # healthcheck:
    #   test: ["CMD", "/healthcheck.sh"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  redis-master:
    image: 'bitnami/redis:5.0.2'
    ports:
      - '7279:6379'
    environment:
      - REDIS_REPLICATION_MODE=master 
      - REDIS_PASSWORD=pass
    volumes:
      - 'pretixRedisMaster:/opt/bitnami/redis/etc/'
    networks:
      - pretixRedisNetwork
      - pretixOut
    # deploy:
    #   mode: replicated
    #   replicas: 1
    #   restart_policy:
    #     condition: any

  redis-replica:
    image: 'bitnami/redis:5.0.2'
    depends_on:
      - redis-master
    ports:
      - '7278:6379'
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_MASTER_PASSWORD=pass
      - REDIS_PASSWORD=pass
    networks:
      - pretixRedisNetwork
    # deploy:
    #   replicas: 2
    #   update_config:
    #     parallelism: 1
    #     delay: 20s
    #   restart_policy:
    #     condition: any

  redis-sentinel:
    image: 'bitnami/redis:5.0.2'
    ports:
      - '7279:16379'
    depends_on:
      - redis-master
      - redis-replica
    entrypoint: |
      bash -c 'bash -s <<EOF
      "/bin/bash" -c "cat <<EOF > /opt/bitnami/redis/etc/sentinel.conf
      port 16379
      dir /tmp
      sentinel monitor master-node redis-master 6379 2
      sentinel down-after-milliseconds master-node 5000
      sentinel parallel-syncs master-node 1
      sentinel failover-timeout master-node 5000
      sentinel auth-pass master-node pass
      sentinel announce-ip redis-sentinel
      sentinel announce-port 16379
      EOF"     
      "/bin/bash" -c "redis-sentinel /opt/bitnami/redis/etc/sentinel.conf"    
      EOF'
    # deploy:
    #   mode: replicated
    #   replicas: 3
    #   restart_policy:
    #     condition: any
    networks:
      - pretixRedisNetwork
  # web:
  #     image: pretix/standalone:stable
  #     container_name: pretix_server
  #     restart: always
  #     depends_on:
  #         - pgpool
  #         - redis
  #     ports:
  #         - "8888:80"
  #     volumes:
  #         - ./pretix.cfg:/etc/pretix/pretix.cfg

volumes:
  pretixRedisMaster:
      external: false
  pg_0_data:
    driver: local
  pg_1_data:
    driver: local
  pg_2_data:
    driver: local

networks:
  pretixRedisNetwork:
  pretixOut: