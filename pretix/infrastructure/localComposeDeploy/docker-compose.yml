#
# Title: Deployment Configuration for Local Docker Compose
#
# Description: Use this file to deploy our services in your machine. It should work on the first try if you wait a few minutes until the web services are really up. But if the web containers go right at the beginning, rebuild them along with NGinX.
#
# Authors: Filipe Pires (85122) and Jo√£o Alegria (85048)
#

version: '3.3'
services:
  pg-0:
    #image: bitnami/postgresql-repmgr:11
    build: ../components/postgres
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
      - POSTGRESQL_USERNAME=customusername
      - POSTGRESQL_PASSWORD=custompassword
      - POSTGRESQL_DATABASE=customdatabase
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1,pg-2
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
    volumes:
      - postgresmaster:/bitnami/postgresql:rw
    networks:
      - pretixPgNetwork
    ports:
      - 9187:9187

  pg-1:
    #image: bitnami/postgresql-repmgr:11
    build: ../components/postgres
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
      - POSTGRESQL_USERNAME=customusername
      - POSTGRESQL_PASSWORD=custompassword
      - POSTGRESQL_DATABASE=customdatabase
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1,pg-2
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
    volumes:
      - postgresslave1:/bitnami/postgresql:rw
    networks:
      - pretixPgNetwork
    ports:
      - 9188:9187

  pg-2:
    #image: bitnami/postgresql-repmgr:11
    build: ../components/postgres
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
      - POSTGRESQL_USERNAME=customusername
      - POSTGRESQL_PASSWORD=custompassword
      - POSTGRESQL_DATABASE=customdatabase
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1,pg-2
      - REPMGR_NODE_NAME=pg-2
      - REPMGR_NODE_NETWORK_NAME=pg-2
    volumes:
      - postgresslave2:/bitnami/postgresql:rw
    networks:
      - pretixPgNetwork
    ports:
      - 9189:9187

  pgpool:
    #image: bitnami/pgpool:4
    build: ../components/pgpool
    ports:
      - 7232:5432
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-0:5432,1:pg-1:5432,2:pg-2:5432
      - PGPOOL_SR_CHECK_USER=customusername
      - PGPOOL_SR_CHECK_PASSWORD=custompassword
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=adminpassword
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpassword
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pretixPgNetwork

  redisproxy:
    build: ../components/haproxy
    environment:
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=password
      - REDIS_HOSTS=redismaster, redisslave, redisslave2
    networks:
      - pretixRedisNetwork
    ports:
      - 9101:9101
      - 7279:6379

  redismaster:
    #image: redis:5.0.9-alpine
    build: ../components/redisMaster
    volumes:
      - redis1:/data
    networks:
      - pretixRedisNetwork
    ports:
      - 9121:9121

  redisslave:
    build: ../components/redisSlave
    environment:
      - REDIS_MASTER=redismaster
    volumes:
      - redis2:/data
    networks:
      - pretixRedisNetwork
    ports:
      - 9122:9121

  redisslave2:
    build: ../components/redisSlave
    environment:
      - REDIS_MASTER=redismaster
    volumes:
      - redis3:/data
    networks:
      - pretixRedisNetwork
    ports:
      - 9123:9121

  redissentinel:
    build: ../components/redisSentinel
    environment:
      - MASTER_NAME=mymaster
      - QUORUM=1
      - MASTER=redismaster
    volumes:
      - redis4:/data
    networks:
      - pretixRedisNetwork
    ports:
      - 9124:9121

  redissentinel2:
    build: ../components/redisSentinel
    environment:
      - MASTER_NAME=mymaster
      - QUORUM=1
      - MASTER=redismaster
    volumes:
      - redis4:/data
    networks:
      - pretixRedisNetwork
    ports:
      - 9125:9121
        
  web:
    build: ../components/myPretix
    environment:
      - POSTGRESIP=pgpool
      - REDISIP=redisproxy
    volumes:
      - pretixData1:/etc/pretix:rw
      - pretixData2:/data:rw
    secrets:
      - source: pretixConf
        target: /etc/pretix/pretix.cfg
    ports:
      - 7201:80
    networks:
      - pretixOut
      - pretixPgNetwork
      - pretixRedisNetwork

  web2:
    build: ../components/myPretix
    environment:
      - POSTGRESIP=pgpool
      - REDISIP=redisproxy
    volumes:
      - pretixData1:/etc/pretix:rw
      - pretixData2:/data:rw
    secrets:
      - source: pretixConf
        target: /etc/pretix/pretix.cfg
    ports:
      - 7202:80
    networks:
      - pretixOut
      - pretixPgNetwork
      - pretixRedisNetwork

  nginx: 
    #image: nginx:latest
    build: ../components/nginx
    depends_on:
      - web
      - web2
    secrets:
      - source: pretixNginxConf
        target: /etc/nginx/nginx.conf
    ports:
      - 7200:80
      - 9913:9913
    networks:
      - pretixOut

secrets:
  pretixConf:
    file: ./pretix.cfg
  pretixNginxConf:
    file: ./nginx.conf

networks:
  pretixOut:
    # driver: overlay
  pretixPgNetwork:
    # driver: overlay
  pretixRedisNetwork:
    # driver: overlay

volumes:
  pretixData1:
    driver: local
  pretixData2:
    driver: local
  redis1:
    driver: local
  redis2:
    driver: local
  redis3:
    driver: local
  redis4:
    driver: local
  postgresmaster:
    driver: local
  postgresslave1:
    driver: local
  postgresslave2:
    driver: local
